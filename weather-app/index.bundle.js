(()=>{"use strict";var n={484:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,".nav-bar {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n  padding: 10px;\n  border-bottom: 2px solid #fff;\n}\n\n.search-bar {\n  display: flex;\n  align-items: center;\n}\n\n.search-bar > form > input[type='text'] {\n  font-variant: normal;\n  flex-grow: 2;\n  font-size: 1.2em;\n  padding: 5px 5px 5px 30px;\n  width: 85%;\n  max-width: 250px;\n  outline: none;\n  border: 1px solid var(--light-midtone-color);\n  border-radius: 10px;\n}\n\n.search-bar > form > button {\n  color: var(--light-midtone-color);\n  background-color: transparent;\n  font-size: 1.2em;\n  position: relative;\n  left: 30px;\n  bottom: 2px;\n  border: 0;\n  cursor: pointer;\n}\n\npath {\n  fill: var(--light-color);\n  stroke: var(--dark-color);\n  stroke-width: 4;\n  stroke-linejoin: round;\n}\n\npath:hover {\n  stroke-width: 6;\n}\n\n@media only screen and (min-width: 600px) {\n  .nav-bar {\n    margin: auto;\n    max-width: 960px;\n  }\n}\n","",{version:3,sources:["webpack://./src/css/nav.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,SAAS;EACT,aAAa;EACb,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,oBAAoB;EACpB,YAAY;EACZ,gBAAgB;EAChB,yBAAyB;EACzB,UAAU;EACV,gBAAgB;EAChB,aAAa;EACb,4CAA4C;EAC5C,mBAAmB;AACrB;;AAEA;EACE,iCAAiC;EACjC,6BAA6B;EAC7B,gBAAgB;EAChB,kBAAkB;EAClB,UAAU;EACV,WAAW;EACX,SAAS;EACT,eAAe;AACjB;;AAEA;EACE,wBAAwB;EACxB,yBAAyB;EACzB,eAAe;EACf,sBAAsB;AACxB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE;IACE,YAAY;IACZ,gBAAgB;EAClB;AACF",sourcesContent:[".nav-bar {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 15px;\n  padding: 10px;\n  border-bottom: 2px solid #fff;\n}\n\n.search-bar {\n  display: flex;\n  align-items: center;\n}\n\n.search-bar > form > input[type='text'] {\n  font-variant: normal;\n  flex-grow: 2;\n  font-size: 1.2em;\n  padding: 5px 5px 5px 30px;\n  width: 85%;\n  max-width: 250px;\n  outline: none;\n  border: 1px solid var(--light-midtone-color);\n  border-radius: 10px;\n}\n\n.search-bar > form > button {\n  color: var(--light-midtone-color);\n  background-color: transparent;\n  font-size: 1.2em;\n  position: relative;\n  left: 30px;\n  bottom: 2px;\n  border: 0;\n  cursor: pointer;\n}\n\npath {\n  fill: var(--light-color);\n  stroke: var(--dark-color);\n  stroke-width: 4;\n  stroke-linejoin: round;\n}\n\npath:hover {\n  stroke-width: 6;\n}\n\n@media only screen and (min-width: 600px) {\n  .nav-bar {\n    margin: auto;\n    max-width: 960px;\n  }\n}\n"],sourceRoot:""}]);const A=a},538:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nul {\n  list-style-type: none;\n}\n","",{version:3,sources:["webpack://./src/css/reset.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,qBAAqB;AACvB",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nul {\n  list-style-type: none;\n}\n"],sourceRoot:""}]);const A=a},402:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,":root {\n  --light-color: #ffffff;\n  --dark-color: #353535;\n  --accent-color: #1da7a0;\n  --light-midtone-color: #d9d9d9;\n  --dark-midtone-color: #797979;\n}\n\n* {\n  font-family: 'KoHo', sans-serif;\n}\n\nbody {\n  background-color: #fff;\n  background-position: center center;\n  background-attachment: fixed;\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n#display {\n  padding: 0 20px;\n  max-width: 960px;\n  margin: auto;\n}\n\n.flex-container {\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  max-width: 960px;\n  margin: auto;\n  gap: 50px;\n}\n\n.flex-item {\n  color: var(--light-color);\n  display: flex;\n  flex-direction: column;\n}\n\n.font-medium {\n  font-size: 1.8em;\n}\n\n.center {\n  text-align: center;\n}\n\n.text-shadow {\n  text-shadow: 1px 1px 5px #000;\n}\n\n.lds-ring {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-ring div {\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid #000;\n  border-radius: 50%;\n  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: #000 transparent transparent transparent;\n}\n.lds-ring div:nth-child(1) {\n  animation-delay: -0.45s;\n}\n.lds-ring div:nth-child(2) {\n  animation-delay: -0.3s;\n}\n.lds-ring div:nth-child(3) {\n  animation-delay: -0.15s;\n}\n@keyframes lds-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@media only screen and (min-width: 600px) {\n  .font-medium {\n    font-size: 2.4em;\n  }\n\n  #display {\n    margin-top: 40px;\n  }\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,qBAAqB;EACrB,uBAAuB;EACvB,8BAA8B;EAC9B,6BAA6B;AAC/B;;AAEA;EACE,+BAA+B;AACjC;;AAEA;EACE,sBAAsB;EACtB,kCAAkC;EAClC,4BAA4B;EAC5B,sBAAsB;EACtB,4BAA4B;AAC9B;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,YAAY;AACd;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,eAAe;EACf,gBAAgB;EAChB,YAAY;EACZ,SAAS;AACX;;AAEA;EACE,yBAAyB;EACzB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,qBAAqB;EACrB,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;AACA;EACE,sBAAsB;EACtB,cAAc;EACd,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,WAAW;EACX,sBAAsB;EACtB,kBAAkB;EAClB,8DAA8D;EAC9D,sDAAsD;AACxD;AACA;EACE,uBAAuB;AACzB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,uBAAuB;AACzB;AACA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF;;AAEA;EACE;IACE,gBAAgB;EAClB;;EAEA;IACE,gBAAgB;EAClB;AACF",sourcesContent:[":root {\n  --light-color: #ffffff;\n  --dark-color: #353535;\n  --accent-color: #1da7a0;\n  --light-midtone-color: #d9d9d9;\n  --dark-midtone-color: #797979;\n}\n\n* {\n  font-family: 'KoHo', sans-serif;\n}\n\nbody {\n  background-color: #fff;\n  background-position: center center;\n  background-attachment: fixed;\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n#display {\n  padding: 0 20px;\n  max-width: 960px;\n  margin: auto;\n}\n\n.flex-container {\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  max-width: 960px;\n  margin: auto;\n  gap: 50px;\n}\n\n.flex-item {\n  color: var(--light-color);\n  display: flex;\n  flex-direction: column;\n}\n\n.font-medium {\n  font-size: 1.8em;\n}\n\n.center {\n  text-align: center;\n}\n\n.text-shadow {\n  text-shadow: 1px 1px 5px #000;\n}\n\n.lds-ring {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n}\n.lds-ring div {\n  box-sizing: border-box;\n  display: block;\n  position: absolute;\n  width: 64px;\n  height: 64px;\n  margin: 8px;\n  border: 8px solid #000;\n  border-radius: 50%;\n  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  border-color: #000 transparent transparent transparent;\n}\n.lds-ring div:nth-child(1) {\n  animation-delay: -0.45s;\n}\n.lds-ring div:nth-child(2) {\n  animation-delay: -0.3s;\n}\n.lds-ring div:nth-child(3) {\n  animation-delay: -0.15s;\n}\n@keyframes lds-ring {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n@media only screen and (min-width: 600px) {\n  .font-medium {\n    font-size: 2.4em;\n  }\n\n  #display {\n    margin-top: 40px;\n  }\n}\n"],sourceRoot:""}]);const A=a},908:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(15),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,".city {\n  font-size: 2em;\n  color: var(--light-color);\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  border-bottom: 2px solid var(--light-color);\n  border-right: 2px solid var(--light-color);\n}\n\n.description {\n  text-align: center;\n}\n\n.data-header {\n  color: var(--light-midtone-color);\n  text-transform: capitalize;\n  font-size: 1.1em;\n  padding: 10px 0px;\n}\n\n.f::after {\n  content: '\\00B0 F';\n  display: inline-block;\n  font-size: 0.5em;\n  vertical-align: text-top;\n}\n\n.c::after {\n  content: '\\00B0 C';\n  display: inline-block;\n  font-size: 0.5em;\n  vertical-align: text-top;\n}\n\n.toggle-switch .toggle-toggler {\n  visibility: hidden;\n  width: 0;\n  height: 0;\n}\n\n.toggle-slider {\n  background-color: var(--light-midtone-color);\n  transition: 0.3s;\n  padding-right: 18px;\n  cursor: pointer;\n  border-radius: 34px;\n}\n\n.toggle-slider:before {\n  content: 'F';\n  display: inline-block;\n  color: var(--dark-midtone-color);\n  background-color: var(--light-color);\n  text-align: center;\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  line-height: 25px;\n}\n\n.toggle-toggler:checked + .toggle-slider {\n  background-color: var(--accent-color);\n  padding-right: 0;\n  padding-left: 18px;\n}\n\n.toggle-toggler:focus + .toggle-slider {\n  box-shadow: 0 0 1px var(--accent-color);\n}\n\n.toggle-toggler:checked + .toggle-slider:before {\n  color: var(--accent-color);\n  content: 'C';\n  left: calc(100% - 5px);\n}\n\n@media only screen and (min-width: 600px) {\n  .city {\n    font-size: 2.5em;\n    justify-content: center;\n    border: 0;\n  }\n\n  .data-header {\n    font-size: 1.3em;\n  }\n}\n","",{version:3,sources:["webpack://./src/css/view.css"],names:[],mappings:"AAAA;EACE,cAAc;EACd,yBAAyB;EACzB,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,2CAA2C;EAC3C,0CAA0C;AAC5C;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,iCAAiC;EACjC,0BAA0B;EAC1B,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;EACrB,gBAAgB;EAChB,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;EACrB,gBAAgB;EAChB,wBAAwB;AAC1B;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;AACX;;AAEA;EACE,4CAA4C;EAC5C,gBAAgB;EAChB,mBAAmB;EACnB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,YAAY;EACZ,qBAAqB;EACrB,gCAAgC;EAChC,oCAAoC;EACpC,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,qCAAqC;EACrC,gBAAgB;EAChB,kBAAkB;AACpB;;AAEA;EACE,uCAAuC;AACzC;;AAEA;EACE,0BAA0B;EAC1B,YAAY;EACZ,sBAAsB;AACxB;;AAEA;EACE;IACE,gBAAgB;IAChB,uBAAuB;IACvB,SAAS;EACX;;EAEA;IACE,gBAAgB;EAClB;AACF",sourcesContent:[".city {\n  font-size: 2em;\n  color: var(--light-color);\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  border-bottom: 2px solid var(--light-color);\n  border-right: 2px solid var(--light-color);\n}\n\n.description {\n  text-align: center;\n}\n\n.data-header {\n  color: var(--light-midtone-color);\n  text-transform: capitalize;\n  font-size: 1.1em;\n  padding: 10px 0px;\n}\n\n.f::after {\n  content: '\\00B0 F';\n  display: inline-block;\n  font-size: 0.5em;\n  vertical-align: text-top;\n}\n\n.c::after {\n  content: '\\00B0 C';\n  display: inline-block;\n  font-size: 0.5em;\n  vertical-align: text-top;\n}\n\n.toggle-switch .toggle-toggler {\n  visibility: hidden;\n  width: 0;\n  height: 0;\n}\n\n.toggle-slider {\n  background-color: var(--light-midtone-color);\n  transition: 0.3s;\n  padding-right: 18px;\n  cursor: pointer;\n  border-radius: 34px;\n}\n\n.toggle-slider:before {\n  content: 'F';\n  display: inline-block;\n  color: var(--dark-midtone-color);\n  background-color: var(--light-color);\n  text-align: center;\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  line-height: 25px;\n}\n\n.toggle-toggler:checked + .toggle-slider {\n  background-color: var(--accent-color);\n  padding-right: 0;\n  padding-left: 18px;\n}\n\n.toggle-toggler:focus + .toggle-slider {\n  box-shadow: 0 0 1px var(--accent-color);\n}\n\n.toggle-toggler:checked + .toggle-slider:before {\n  color: var(--accent-color);\n  content: 'C';\n  left: calc(100% - 5px);\n}\n\n@media only screen and (min-width: 600px) {\n  .city {\n    font-size: 2.5em;\n    justify-content: center;\n    border: 0;\n  }\n\n  .data-header {\n    font-size: 1.3em;\n  }\n}\n"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,o){"string"==typeof n&&(n=[[null,n,""]]);var r={};if(o)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(r[a]=!0)}for(var A=0;A<n.length;A++){var c=[].concat(n[A]);o&&r[c[0]]||(t&&(c[2]?c[2]="".concat(t," and ").concat(c[2]):c[2]=t),e.push(c))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,o=new Array(e);t<e;t++)o[t]=n[t];return o}n.exports=function(n){var t,o,r=(o=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n)){var t=[],o=!0,r=!1,i=void 0;try{for(var a,A=n[Symbol.iterator]();!(o=(a=A.next()).done)&&(t.push(a.value),!e||t.length!==e);o=!0);}catch(n){r=!0,i=n}finally{try{o||null==A.return||A.return()}finally{if(r)throw i}}return t}}(t,o)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var o=Object.prototype.toString.call(n).slice(8,-1);return"Object"===o&&n.constructor&&(o=n.constructor.name),"Map"===o||"Set"===o?Array.from(n):"Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o)?e(n,t):void 0}}(t,o)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=r[1],a=r[3];if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),s="/*# ".concat(c," */"),l=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[i].concat(l).concat([s]).join("\n")}return[i].join("\n")}},379:(n,e,t)=>{var o,r=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),i=[];function a(n){for(var e=-1,t=0;t<i.length;t++)if(i[t].identifier===n){e=t;break}return e}function A(n,e){for(var t={},o=[],r=0;r<n.length;r++){var A=n[r],c=e.base?A[0]+e.base:A[0],s=t[c]||0,l="".concat(c," ").concat(s);t[c]=s+1;var d=a(l),p={css:A[1],media:A[2],sourceMap:A[3]};-1!==d?(i[d].references++,i[d].updater(p)):i.push({identifier:l,updater:f(p,e),references:1}),o.push(l)}return o}function c(n){var e=document.createElement("style"),o=n.attributes||{};if(void 0===o.nonce){var i=t.nc;i&&(o.nonce=i)}if(Object.keys(o).forEach((function(n){e.setAttribute(n,o[n])})),"function"==typeof n.insert)n.insert(e);else{var a=r(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var s,l=(s=[],function(n,e){return s[n]=e,s.filter(Boolean).join("\n")});function d(n,e,t,o){var r=t?"":o.media?"@media ".concat(o.media," {").concat(o.css,"}"):o.css;if(n.styleSheet)n.styleSheet.cssText=l(e,r);else{var i=document.createTextNode(r),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(i,a[e]):n.appendChild(i)}}function p(n,e,t){var o=t.css,r=t.media,i=t.sourceMap;if(r?n.setAttribute("media",r):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleSheet)n.styleSheet.cssText=o;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(o))}}var g=null,u=0;function f(n,e){var t,o,r;if(e.singleton){var i=u++;t=g||(g=c(e)),o=d.bind(null,t,i,!1),r=d.bind(null,t,i,!0)}else t=c(e),o=p.bind(null,t,e),r=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return o(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;o(n=e)}else r()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===o&&(o=Boolean(window&&document&&document.all&&!window.atob)),o));var t=A(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var o=0;o<t.length;o++){var r=a(t[o]);i[r].references--}for(var c=A(n,e),s=0;s<t.length;s++){var l=a(t[s]);0===i[l].references&&(i[l].updater(),i.splice(l,1))}t=c}}}},885:(n,e,t)=>{n.exports=t.p+"4f7d894366c7e957a7f4.jpg"},116:(n,e,t)=>{n.exports=t.p+"529d50235fe963930a52.jpg"},893:(n,e,t)=>{n.exports=t.p+"8fbe154e5ffedac8cb77.jpg"}},e={};function t(o){if(e[o])return e[o].exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),o=t(538);e()(o.Z,{insert:"head",singleton:!1}),o.Z.locals;var r=t(402);e()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;var i=t(484);e()(i.Z,{insert:"head",singleton:!1}),i.Z.locals;var a=t(908);e()(a.Z,{insert:"head",singleton:!1}),a.Z.locals;var A=t(116),c=t(893),s=t(885);function l(n,e=2){return(1.8*(n-273.15)+32).toFixed(e)}function d(n,e=2){return(n-273.15).toFixed(e)}function p(n,e=null){const t=document.createElement("div"),o=document.createElement("p"),r=document.createElement("div");return t.classList.add("flex-item"),o.classList.add("data-header","center","text-shadow"),r.classList.add("font-medium","center","text-shadow"),null!==e&&r.classList.add(e),o.textContent=n,t.appendChild(o),t.appendChild(r),{container:t,display:r}}async function g(n,e=!1){try{const t="e7aa7a6609b8b2795100d597605b657f";let o=`https://api.openweathermap.org/data/2.5/weather?q=${n}&appid=${t}`;e&&(o=`https://api.openweathermap.org/data/2.5/weather?lat=${n.latitude}&lon=${n.longitude}&appid=${t}`);const r=await fetch(o,{mode:"cors"}),i=await r.json();document.getElementById("spinner").remove();const a=function(n){if("404"===n.cod)return null;const e=function(n){return{city:n.name,status:n.weather[0].main,description:n.weather[0].description,temperature:n.main.temp,feelsLike:n.main.feels_like,humidity:n.main.humidity,windSpeed:n.wind.speed}}(n),t=sessionStorage.getItem("unit")||"f";return sessionStorage.setItem("unit",t),{render:function(){const n=document.createDocumentFragment(),o=document.querySelector(".nav-bar"),r=document.getElementById("display"),i=document.createElement("div"),a=document.createElement("p"),g=document.createElement("p");i.classList.add("flex-container"),a.classList.add("city","text-shadow"),g.classList.add("description","data-header","text-shadow"),a.textContent=e.city,g.textContent=e.description,document.body.style.backgroundImage=function(n){switch(n){case"Clouds":return`url(${A})`;case"Rain":return`url(${c})`;case"Clear":return`url(${s})`}}(e.status);const u=function(n,e,t,o,r="f"){if("number"!=typeof n)return;if("number"!=typeof e)return;if("string"!=typeof r)return;if("f"!==r&&"c"!==r)return;const i=document.createDocumentFragment(),a=p("Temp",r),A=p("Feels Like",r),c=p("Humidity"),s=p("Wind");return"f"===r?(a.display.textContent=l(n),A.display.textContent=l(e)):(a.display.textContent=d(n),A.display.textContent=d(e)),c.display.textContent=`${t}%`,s.display.textContent=`${o} k/m`,i.appendChild(a.container),i.appendChild(A.container),i.appendChild(c.container),i.appendChild(s.container),{component:i,toggleUnit:function(){const t=sessionStorage.getItem("unit");"f"===t?(a.display.textContent=d(n),a.display.classList.replace("f","c"),A.display.textContent=d(e),A.display.classList.replace("f","c"),sessionStorage.setItem("unit","c")):"c"===t&&(a.display.textContent=l(n),a.display.classList.replace("c","f"),A.display.textContent=l(e),A.display.classList.replace("c","f"),sessionStorage.setItem("unit","f"))}}}(e.temperature,e.feelsLike,e.humidity,e.windSpeed,t),f=function(n,e="f"){if("function"!=typeof n)return;if("string"!=typeof e)return;if("f"!==e&&"c"!==e)return;const t=document.createDocumentFragment(),o=document.createElement("div"),r=document.createElement("label"),i=document.createElement("input"),a=document.createElement("span");return r.classList.add("toggle-switch"),i.classList.add("toggle-toggler"),a.classList.add("toggle-slider"),i.type="checkbox","c"===e&&(i.checked=!0),i.addEventListener("click",(()=>n())),r.appendChild(i),r.appendChild(a),o.appendChild(r),t.appendChild(o),{component:t,getChecked:function(){return i.checked}}}(u.toggleUnit,t);i.appendChild(u.component),n.appendChild(a),n.appendChild(g),n.appendChild(i),o.appendChild(f.component),r.appendChild(n)}}}(i);if(a)a.render();else{const n=document.createElement("div");n.style.display="flex",n.style.justifyContent="center",n.textContent=i.message,document.body.appendChild(n)}}catch(n){console.error(n)}}window.onload=()=>{const n=new URL(window.location.href);n.searchParams.has("q")&&""!==n.searchParams.get("q").trim()?g(n.searchParams.get("q")):navigator.geolocation.getCurrentPosition((n=>{g(n.coords,!0)})),document.querySelector("path").onclick=function(){document.location.href="/theodinproject/weather-app/"}}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
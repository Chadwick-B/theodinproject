(()=>{"use strict";const e=()=>{const e=()=>(65536*(1+Math.random())|0).toString(16).substring(1);return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()},t={projects:JSON.parse(localStorage.getItem("projects"))||[],Project:t=>({id:e(),tasks:[],title:t}),Task:(t,n,o,r,c)=>(typeof o!==Date&&"Invalid Date"===(o=new Date(o).toLocaleDateString())&&(o=(new Date).toLocaleDateString()),{id:e(),title:t,description:n,dueDate:o,priority:r,completed:c})},n=e=>{const t=document.createElement("div");return t.classList.add("modal"),t.innerHTML='\n        <div class="modal">\n            <div class="modal-content">\n                <span class="x-btn">&times;</span>\n            </div>\n        </div>\n    ',t.querySelector(".x-btn").addEventListener("click",(()=>t.remove()),!1),e.appendChild(t),t},o=e=>{const t=document.createElement("form");return t.setAttribute("action","javascript:void(0);"),t.setAttribute("autocomplete","off"),t.innerHTML='\n        <legend class="text-center">New Task</legend>\n        <div>\n            <label for="title">Title</label><br>\n            <input type="text" name="title" autofocus placeholder="Go to the store">\n        </div>\n        <div>\n            <label for="description">Description</label><br>\n            <input type="text" name="description" placeholder="Buy thousands of cookies">\n        </div>\n        <div>\n            <label for="dueDate">Due Date</label>\n            <input type="date" name="dueDate"><br>\n        </div>\n        <div>\n            <label for="priority">Priority</label>\n            <select name="priority">\n                <option value="Default">Default</option>\n                <option value="Important">Important</option>\n            </select><br>\n        </div>\n        <div class="text-center"><button class="btn" type="submit">Create</button></div>\n    ',e.appendChild(t),t},r=(e,t)=>{const n=document.createElement("li");return n.innerHTML=`\n        <div class="task-content">\n            <h3>${e.title}</h3>\n            ${e.description}\n        </div>\n        <div class="text-center">\n            ${new Date(e.dueDate).toLocaleDateString()}\n            <div>\n                <button class="task-complete-btn btn" type="button">&#10004;</button>\n                <button class="task-delete-btn btn" type="button">&#10006;</button>\n            </div>\n        </div>\n    `,"Important"===e.priority&&n.setAttribute("style","background-color: #f5dedc"),e.completed&&n.classList.add("completed"),t.appendChild(n),n},c={clearProjectList:()=>{const e=document.createRange();e.selectNodeContents(document.getElementById("project-list")),e.deleteContents()},clearTaskList:()=>{const e=document.createRange();e.selectNodeContents(document.getElementById("task-list")),e.deleteContents()},populateProjectList:e=>{c.clearProjectList();const t=document.getElementById("project-list"),n=document.createElement("li");n.innerHTML="<h1>Projects</h1>",t.appendChild(n);for(const n of e){const e=document.createElement("li"),o=document.createElement("a");o.href="javascript:void(0);",o.textContent=n.title,o.addEventListener("click",(()=>c.render(n)),!1),e.appendChild(o);const r=document.createElement("button");r.classList.add("x-btn"),r.type="button",r.innerHTML="&times;",r.addEventListener("click",(()=>d.deleteProject(n.id)),!1),e.appendChild(r),t.appendChild(e)}},render:e=>{c.clearTaskList();const t=document.getElementById("project-title");if(t.setAttribute("data-id",e.id),t.textContent=e.title,0!=e.tasks.length){const t=document.getElementById("task-list");e.tasks.sort(((e,t)=>e.priority<t.priority?1:e.priority>t.priority?-1:new Date(e.dueDate)-new Date(t.dueDate)));for(const n of e.tasks){const o=r(n,t);o.querySelector(".task-complete-btn").addEventListener("click",(()=>d.completeTaskForProject(e.id,n.id)),!1),o.querySelector(".task-delete-btn").addEventListener("click",(()=>d.deleteTaskFromProject(e.id,n.id)),!1),o.querySelector(".task-content").addEventListener("dblclick",(()=>c.createTaskEditForm(n)),!1)}}},createProjectForm:()=>{const e=n(document.body),t=(e=>{const t=document.createElement("form");return t.setAttribute("action","javascript:void(0);"),t.setAttribute("autocomplete","off"),t.innerHTML='\n        <legend class="text-center">New Project</legend>\n        <div>\n            <label for="title">Title</label><br>\n            <input type="text" name="title" autofocus placeholder="My New Project">\n        </div>\n        <div class="text-center" style="margin-top: 5px"><button class="btn center" type="submit">Create</button></div>\n    ',e.appendChild(t),t})(e.querySelector(".modal-content"));t.addEventListener("submit",(n=>{n.preventDefault(),d.addProject(new FormData(t)),e.remove()}))},createTaskEditForm:e=>{const t=n(document.body),r=o(t.querySelector(".modal-content")),c=r.querySelectorAll("input");c[0].value=e.title,c[1].value=e.description,c[2].valueAsDate=new Date(e.dueDate),r.querySelector("select").value=e.priority,r.addEventListener("submit",(n=>{n.preventDefault();const o=document.getElementById("project-title").getAttribute("data-id");d.editTaskForProject(o,e.id,new FormData(r),e.completed),t.remove()}))},createTaskForm:()=>{const e=n(document.body),t=o(e.querySelector(".modal-content"));t.addEventListener("submit",(n=>{n.preventDefault();const o=document.getElementById("project-title").getAttribute("data-id");d.addTaskToProject(o,new FormData(t)),e.remove()}))}},i=c,d={init:()=>{let e;if(document.getElementById("new-project").addEventListener("click",(()=>i.createProjectForm())),document.getElementById("new-task").addEventListener("click",(()=>i.createTaskForm())),t.projects.length)e=t.projects[0];else{e=t.Project("Default Project");const n=t.Task("Example Task","Task Description","3-7-2021","Default",!1);e.tasks.push(n),t.projects.push(e)}window.addEventListener("beforeunload",(()=>localStorage.setItem("projects",JSON.stringify(t.projects)))),i.populateProjectList(t.projects),i.render(e)},addProject:e=>{const n=t.Project(e.get("title"));t.projects.push(n),i.populateProjectList(t.projects),i.render(n)},deleteProject:e=>{if(t.projects.length>1){const n=t.projects.findIndex((t=>t.id===e));t.projects.splice(n,1),i.populateProjectList(t.projects),document.getElementById("project-title").getAttribute("data-id")===e&&(n<t.projects.length?i.render(t.projects[n]):i.render(t.projects[n-1]))}},addTaskToProject:(e,n)=>{const o=t.Task(n.get("title"),n.get("description"),n.get("dueDate"),n.get("priority"),!1),r=t.projects.find((t=>t.id===e));r.tasks.push(o),i.render(r)},editTaskForProject:(e,n,o,r)=>{const c=t.projects.find((t=>t.id===e)),d=c.tasks.findIndex((e=>e.id===n)),s=t.Task(o.get("title"),o.get("description"),o.get("dueDate"),o.get("priority"),r);c.tasks.splice(d,1,s),i.render(c)},completeTaskForProject:(e,n)=>{const o=t.projects.find((t=>t.id===e)),r=o.tasks.find((e=>e.id===n));r.completed=!r.completed,i.render(o)},deleteTaskFromProject:(e,n)=>{const o=t.projects.find((t=>t.id===e)),r=o.tasks.findIndex((e=>e.id===n));o.tasks.splice(r,1),i.render(o)}};d.init()})();
{"version":3,"sources":["utils.js","components/CardMemory/Scoreboard.js","components/CardMemory/CardNames.js","components/CardMemory/Card.js","components/CardMemory/index.js","components/Main.js","App.js","index.js"],"names":["shuffle","arr","i","length","j","Math","floor","random","Scoreboard","props","score","highScore","className","CardNames","Card","name","path","onClick","src","alt","CardMemory","useState","setScore","setHighScore","cards","setCards","reset","map","id","toString","slice","checked","handleClick","clickedCard","find","card","useEffect","items","process","Main","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAMaA,EAAU,SAACC,GACtB,IAAK,IAAIC,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADH,EAEpB,CAACD,EAAIG,GAAIH,EAAIC,IAA/BD,EAAIC,GAFkC,KAE9BD,EAAIG,GAF0B,KAIzC,OAAOH,G,OCCMO,EAVI,SAACC,GAClB,IAAQC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,UACf,OACE,sBAAKC,UAAU,kBAAf,UACE,0CAAaF,KACb,+CAAkBC,SCqBTE,EA5BG,CAChB,QACA,SACA,QACA,UACA,QACA,UACA,OACA,QACA,MACA,OACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,OACA,WACA,QACA,SACA,OACA,QACA,SACA,UCZaC,EAXF,SAACL,GACZ,IAAQM,EAAwBN,EAAxBM,KAAMC,EAAkBP,EAAlBO,KAAMC,EAAYR,EAAZQ,QAEpB,OACE,sBAAKL,UAAU,OAAOK,QAASA,EAA/B,UACE,qBAAKC,IAAKF,EAAMG,IAAKJ,IACrB,qBAAKH,UAAU,YAAf,SAA4BG,QC4DnBK,EA9DI,WACjB,MAA0BC,mBAAS,GAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAAkCD,mBAAS,GAA3C,mBAAOV,EAAP,KAAkBY,EAAlB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAQ,WACZD,EACEzB,EAAQa,GAAWc,KAAI,SAACZ,GACtB,MAAO,CACLa,GJbDvB,KAAKE,SAASsB,SAAS,IAAIC,OAAO,GIcjCf,KAAMA,EACNgB,SAAS,QAiBXC,EAAc,SAACJ,GACnB,IAAMK,EAAcT,EAAMU,MAAK,SAACC,GAAD,OAAUA,EAAKP,KAAOA,KAChDK,EAAYF,SAPbrB,EAAQC,GAAWY,EAAab,GACpCY,EAAS,GACTI,MAMEO,EAAYF,SAAU,EAbxBT,EAASZ,EAAQ,GACjBe,EAASzB,EAAQwB,MAmBnBY,qBAAU,WACRV,MACC,IAEH,IAAMW,EAAQb,EAAMG,KAAI,SAACQ,GAAD,OACtB,6BACE,cAAC,EAAD,CACEpB,KAAMoB,EAAKpB,KACXC,KAAMsB,IAAA,kBAAoCH,EAAKpB,KAAzC,QACNE,QAAS,kBAAMe,EAAYG,EAAKP,QAJ3BO,EAAKP,OAShB,OACE,qCACE,cAAC,EAAD,CAAYlB,MAAOA,EAAOC,UAAWA,IACrC,qBAAKC,UAAU,iBAAf,SACE,oBAAIA,UAAU,aAAd,SAA4ByB,UCnDrBE,EARF,WACX,OACE,qBAAK3B,UAAU,OAAf,SACE,cAAC,EAAD,OCCS4B,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.990d18b5.chunk.js","sourcesContent":["// For generating keys\nexport const createID = () => {\n  return Math.random().toString(16).slice(-4);\n};\n\n// Durstenfeld shuffle\nexport const shuffle = (arr) => {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n};\n","import React from 'react';\n\nconst Scoreboard = (props) => {\n  const { score, highScore } = props;\n  return (\n    <div className=\"score-container\">\n      <div>Score: {score}</div>\n      <div>High Score: {highScore}</div>\n    </div>\n  );\n};\n\nexport default Scoreboard;\n","const CardNames = [\n  'Ashka',\n  'Alysia',\n  'Bakko',\n  'Blossom',\n  'Croak',\n  'Destiny',\n  'Ezmo',\n  'Freya',\n  'Iva',\n  'Jade',\n  'Jumong',\n  'Lucie',\n  'Oldur',\n  'Pearl',\n  'Pestilus',\n  'Poloma',\n  'Raigon',\n  'Rook',\n  'Ruh Kaan',\n  'Shifu',\n  'Sirius',\n  'Taya',\n  'Thorn',\n  'Varesh',\n  'Zander',\n];\n\nexport default CardNames;\n","import React from 'react';\n\nconst Card = (props) => {\n  const { name, path, onClick } = props;\n\n  return (\n    <div className=\"card\" onClick={onClick}>\n      <img src={path} alt={name} />\n      <div className=\"card-name\">{name}</div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport { createID, shuffle } from '../../utils.js';\nimport Scoreboard from './Scoreboard.js';\nimport CardNames from './CardNames.js';\nimport Card from './Card.js';\n\nconst CardMemory = () => {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [cards, setCards] = useState([]);\n\n  const reset = () => {\n    setCards(\n      shuffle(CardNames).map((name) => {\n        return {\n          id: createID(),\n          name: name,\n          checked: false,\n        };\n      })\n    );\n  };\n\n  const success = () => {\n    setScore(score + 1);\n    setCards(shuffle(cards));\n  };\n\n  const fail = () => {\n    if (score > highScore) setHighScore(score);\n    setScore(0);\n    reset();\n  };\n\n  const handleClick = (id) => {\n    const clickedCard = cards.find((card) => card.id === id);\n    if (!clickedCard.checked) {\n      clickedCard.checked = true;\n      success();\n    } else {\n      fail();\n    }\n  };\n\n  useEffect(() => {\n    reset();\n  }, []);\n\n  const items = cards.map((card) => (\n    <li key={card.id}>\n      <Card\n        name={card.name}\n        path={process.env.PUBLIC_URL + `/assets/${card.name}.png`}\n        onClick={() => handleClick(card.id)}\n      />\n    </li>\n  ));\n\n  return (\n    <>\n      <Scoreboard score={score} highScore={highScore} />\n      <div className=\"card-container\">\n        <ul className=\"card-inner\">{items}</ul>\n      </div>\n    </>\n  );\n};\n\nexport default CardMemory;\n","import React from 'react';\nimport CardMemory from './CardMemory';\n\nconst Main = () => {\n  return (\n    <div className=\"main\">\n      <CardMemory />\n    </div>\n  );\n};\n\nexport default Main;\n","import './css/App.css';\nimport Main from './components/Main.js';\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
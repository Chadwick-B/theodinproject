{"version":3,"sources":["components/Field.js","components/General.js","utils/uid.js","components/Education.js","components/Practical.js","components/CV.js","App.js","index.js"],"names":["Field","props","label","name","type","defaultValue","onChange","useState","isError","setIsError","handleChange","e","id","newValue","target","value","replace","length","htmlFor","autoComplete","className","rows","columns","General","email","phoneNumber","isEditable","data","setData","onSubmit","preventDefault","onClick","uid","parseInt","Math","ceil","random","Date","now","toPrecision","toString","Education","schoolName","titleOfStudy","dateFrom","dateTo","newData","map","formData","index","findIndex","handleSubmit","handleEdit","filter","handleDelete","Practical","companyName","positionTitle","jobTasks","CV","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80dca5b1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Field = (props) => {\n  const { label, name, type, defaultValue, onChange } = props;\n  const [isError, setIsError] = useState(false);\n\n  const validate = (value) => {\n    const trim = value.replace(' ', '');\n\n    if (trim.length === 0) return false;\n    return true;\n  };\n\n  const handleChange = (e, id) => {\n    const newValue = e.target.value;\n    setIsError(validate(newValue) ? false : true);\n    onChange(e, id);\n  };\n\n  return (\n    <div>\n      <div>\n        <label htmlFor={name}>{label}</label>\n      </div>\n      <div>\n        {type === 'textarea' ? (\n          <textarea\n            name={name}\n            defaultValue={defaultValue}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            className={`field ${isError ? 'error' : ''}`}\n            rows={5}\n            columns={50}\n          ></textarea>\n        ) : (\n          <input\n            type={type}\n            name={name}\n            defaultValue={defaultValue}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            className={`field ${isError ? 'error' : ''}`}\n          ></input>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Field;\n","import React, { useState } from 'react';\nimport Field from './Field.js';\n\nconst General = () => {\n  const [data, setData] = useState({\n    name: '',\n    email: '',\n    phoneNumber: '',\n    isEditable: true,\n  });\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    setData({\n      ...data,\n      [name]: value,\n    });\n  };\n\n  const handleEdit = () => {\n    setData({\n      ...data,\n      isEditable: true,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setData({\n      ...data,\n      isEditable: false,\n    });\n  };\n\n  return (\n    <div className=\"section\">\n      <h2 className=\"title\">General Information</h2>\n      <div>\n        {data.isEditable ? (\n          <form onSubmit={handleSubmit} className=\"form\">\n            <Field\n              label=\"Name\"\n              name=\"name\"\n              type=\"text\"\n              defaultValue={data.name}\n              onChange={handleChange}\n            />\n            <Field\n              label=\"Email\"\n              name=\"email\"\n              type=\"text\"\n              defaultValue={data.email}\n              onChange={handleChange}\n            />\n            <Field\n              label=\"Phone Number\"\n              name=\"phoneNumber\"\n              type=\"tel\"\n              defaultValue={data.phoneNumber}\n              onChange={handleChange}\n            />\n            <button type=\"submit\" className=\"btn\">\n              Save\n            </button>\n          </form>\n        ) : (\n          <div>\n            <div className=\"icon-group\">\n              <span onClick={handleEdit}>&#x270E;</span>\n            </div>\n            <p>Name: {data.name}</p>\n            <p>Email: {data.email}</p>\n            <p>Phone Number: {data.phoneNumber}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default General;\n","const uid = (length = 16) => {\n  return parseInt(\n    Math.ceil(Math.random() * Date.now())\n      .toPrecision(length)\n      .toString()\n      .replace('.', '')\n  );\n};\n\nexport default uid;\n","import React, { useState } from 'react';\nimport uid from '../utils/uid.js';\nimport Field from './Field.js';\n\nconst Education = () => {\n  const [data, setData] = useState([\n    {\n      id: uid(),\n      schoolName: '',\n      titleOfStudy: '',\n      dateFrom: '',\n      dateTo: '',\n      isEditable: true,\n    },\n  ]);\n\n  const handleChange = (e, id) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    const newData = data.map((formData) => {\n      if (formData.id === id) {\n        return {\n          ...formData,\n          [name]: value,\n        };\n      } else {\n        return {\n          ...formData,\n        };\n      }\n    });\n\n    setData(newData);\n  };\n\n  const handleEdit = (id) => {\n    let newData = [...data];\n    const index = newData.findIndex((formData) => formData.id === id);\n    newData[index].isEditable = true;\n\n    setData(newData);\n  };\n\n  const handleAdd = () => {\n    const newData = [\n      ...data,\n      {\n        id: uid(),\n        schoolName: '',\n        titleOfStudy: '',\n        dateFrom: '',\n        dateTo: '',\n        isEditable: true,\n      },\n    ];\n\n    setData(newData);\n  };\n\n  const handleDelete = (id) => {\n    const newData = data.filter((formData) => {\n      return formData.id !== id;\n    });\n\n    setData(newData);\n  };\n\n  const handleSubmit = (e, id) => {\n    e.preventDefault();\n\n    let newData = [...data];\n    const index = newData.findIndex((formData) => formData.id === id);\n    newData[index].isEditable = false;\n\n    setData(newData);\n  };\n\n  return (\n    <ul className=\"section\">\n      <h2 className=\"title\">Education Information</h2>\n      {data.map(\n        ({ id, schoolName, titleOfStudy, dateFrom, dateTo, isEditable }) => {\n          return (\n            <li key={id}>\n              {isEditable ? (\n                <form onSubmit={(e) => handleSubmit(e, id)} className=\"form\">\n                  <Field\n                    label=\"School Name\"\n                    name=\"schoolName\"\n                    type=\"text\"\n                    defaultValue={schoolName}\n                    onChange={(e) => handleChange(e, id)}\n                  />\n                  <Field\n                    label=\"Title of Study\"\n                    name=\"titleOfStudy\"\n                    type=\"text\"\n                    defaultValue={titleOfStudy}\n                    onChange={(e) => handleChange(e, id)}\n                  />\n                  <div className=\"date-group flex gap\">\n                    <Field\n                      label=\"Date From\"\n                      name=\"dateFrom\"\n                      type=\"date\"\n                      defaultValue={dateFrom}\n                      onChange={(e) => handleChange(e, id)}\n                    />\n                    <Field\n                      label=\"Date To\"\n                      name=\"dateTo\"\n                      type=\"date\"\n                      defaultValue={dateTo}\n                      onChange={(e) => handleChange(e, id)}\n                    />\n                  </div>\n                  <button type=\"submit\" className=\"btn\">\n                    Save\n                  </button>\n                </form>\n              ) : (\n                <>\n                  <div className=\"icon-group\">\n                    <span onClick={() => handleEdit(id)}>&#x270E;</span>\n                    <span onClick={() => handleDelete(id)}>&#10006;</span>\n                  </div>\n                  <p>School Name: {schoolName}</p>\n                  <p>Study: {titleOfStudy}</p>\n                  <p>\n                    Date: {dateFrom} to {dateTo}\n                  </p>\n                </>\n              )}\n            </li>\n          );\n        }\n      )}\n      <button type=\"button\" className=\"btn\" onClick={handleAdd}>\n        Add\n      </button>\n    </ul>\n  );\n};\n\nexport default Education;\n","import React, { useState } from 'react';\nimport uid from '../utils/uid.js';\nimport Field from './Field.js';\n\nconst Practical = () => {\n  const [data, setData] = useState([\n    {\n      id: uid(),\n      companyName: '',\n      positionTitle: '',\n      jobTasks: '',\n      dateFrom: '',\n      dateTo: '',\n      isEditable: true,\n    },\n  ]);\n\n  const handleChange = (e, id) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    const newData = data.map((formData) => {\n      if (formData.id === id) {\n        return {\n          ...formData,\n          [name]: value,\n        };\n      } else {\n        return {\n          ...formData,\n        };\n      }\n    });\n\n    setData(newData);\n  };\n\n  const handleEdit = (id) => {\n    let newData = [...data];\n    const index = newData.findIndex((formData) => formData.id === id);\n    newData[index].isEditable = true;\n\n    setData(newData);\n  };\n\n  const handleAdd = () => {\n    const newData = [\n      ...data,\n      {\n        id: uid(),\n        companyName: '',\n        positionTitle: '',\n        jobTasks: '',\n        dateFrom: '',\n        dateTo: '',\n        isEditable: true,\n      },\n    ];\n\n    setData(newData);\n  };\n\n  const handleDelete = (id) => {\n    const newData = data.filter((formData) => {\n      return formData.id !== id;\n    });\n\n    setData(newData);\n  };\n\n  const handleSubmit = (e, id) => {\n    e.preventDefault();\n\n    let newData = [...data];\n    const index = newData.findIndex((formData) => formData.id === id);\n    newData[index].isEditable = false;\n\n    setData(newData);\n  };\n\n  return (\n    <ul className=\"section\">\n      <h2 className=\"title\">Practical Information</h2>\n      {data.map(\n        ({\n          id,\n          companyName,\n          positionTitle,\n          jobTasks,\n          dateFrom,\n          dateTo,\n          isEditable,\n        }) => {\n          return (\n            <li key={id}>\n              {isEditable ? (\n                <form onSubmit={(e) => handleSubmit(e, id)} className=\"form\">\n                  <Field\n                    label=\"Company Name\"\n                    name=\"companyName\"\n                    type=\"text\"\n                    defaultValue={companyName}\n                    onChange={(e) => handleChange(e, id)}\n                  />\n                  <Field\n                    label=\"Position Title\"\n                    name=\"positionTitle\"\n                    type=\"text\"\n                    defaultValue={positionTitle}\n                    onChange={(e) => handleChange(e, id)}\n                  />\n                  <Field\n                    label=\"Job Tasks\"\n                    name=\"jobTasks\"\n                    type=\"textarea\"\n                    defaultValue={jobTasks}\n                    onChange={(e) => handleChange(e, id)}\n                  />\n                  <div className=\"date-group flex gap\">\n                    <Field\n                      label=\"Date From\"\n                      name=\"dateFrom\"\n                      type=\"date\"\n                      defaultValue={dateFrom}\n                      onChange={(e) => handleChange(e, id)}\n                    />\n                    <Field\n                      label=\"Date To\"\n                      name=\"dateTo\"\n                      type=\"date\"\n                      defaultValue={dateTo}\n                      onChange={(e) => handleChange(e, id)}\n                    />\n                  </div>\n                  <button type=\"submit\" className=\"btn\">\n                    Save\n                  </button>\n                </form>\n              ) : (\n                <>\n                  <div className=\"icon-group\">\n                    <span onClick={() => handleEdit(id)}>&#x270E;</span>\n                    <span onClick={() => handleDelete(id)}>&#10006;</span>\n                  </div>\n                  <p>Company Name: {companyName}</p>\n                  <p>Position Title: {positionTitle}</p>\n                  <p>Job Tasks: {jobTasks}</p>\n                  <p>\n                    Date: {dateFrom} to {dateTo}\n                  </p>\n                </>\n              )}\n            </li>\n          );\n        }\n      )}\n      <button type=\"button\" className=\"btn\" onClick={handleAdd}>\n        Add\n      </button>\n    </ul>\n  );\n};\n\nexport default Practical;\n","import React from 'react';\nimport General from './General';\nimport Education from './Education';\nimport Practical from './Practical';\nimport '../styles/cv.css';\n\nconst CV = () => {\n  return (\n    <>\n      <h2 className=\"text-center\">CV Form</h2>\n      <div className=\"container\">\n        <General />\n        <Education />\n        <Practical />\n      </div>\n    </>\n  );\n};\n\nexport default CV;\n","import './styles/fonts.css';\nimport './styles/App.css';\nimport CV from './components/CV.js';\n\nfunction App() {\n  return (\n    <main>\n      <CV />\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
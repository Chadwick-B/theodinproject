{"version":3,"sources":["utils/uid.js","components/EducationForm.js","components/EducationDisplay.js","components/EducationSection.js"],"names":["uid","length","parseInt","Math","ceil","random","Date","now","toPrecision","toString","replace","EducationForm","props","schoolName","titleOfStudy","dateFrom","dateTo","onChange","onSubmit","showEmpty","className","htmlFor","type","name","value","autoComplete","EducationDisplay","dataSets","onEdit","onDelete","map","data","onClick","id","EducationSection","isFormValid","state","handleChange","e","target","setState","isShowingEmpty","handleEdit","editData","filter","handleSubmit","preventDefault","concat","handleDelete","key","this","Component"],"mappings":"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","file":"static/js/3.065b5194.chunk.js","sourcesContent":["const uid = (length = 16) => {\n  return parseInt(\n    Math.ceil(Math.random() * Date.now())\n      .toPrecision(length)\n      .toString()\n      .replace('.', '')\n  );\n};\n\nexport default uid;\n","import React from 'react';\n\nconst EducationForm = (props) => {\n  const {\n    schoolName,\n    titleOfStudy,\n    dateFrom,\n    dateTo,\n    onChange,\n    onSubmit,\n    showEmpty,\n  } = props;\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      className={`flex column form-container ${\n        showEmpty ? 'display-empty' : ''\n      }`}\n    >\n      <label\n        htmlFor=\"schoolName\"\n        className={schoolName.length <= 0 ? 'empty' : ''}\n      >\n        School Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"schoolName\"\n        value={schoolName}\n        onChange={onChange}\n        autoComplete=\"off\"\n      />\n      <label\n        htmlFor=\"titleOfStudy\"\n        className={titleOfStudy.length <= 0 ? 'empty' : ''}\n      >\n        Title of Study\n      </label>\n      <input\n        type=\"text\"\n        name=\"titleOfStudy\"\n        value={titleOfStudy}\n        onChange={onChange}\n        autoComplete=\"off\"\n      />\n      <div className=\"date-field\">\n        <label\n          htmlFor=\"dateFrom\"\n          className={dateFrom.length <= 0 ? 'empty' : ''}\n        >\n          Date From\n        </label>\n        <label htmlFor=\"dateTo\" className={dateTo.length <= 0 ? 'empty' : ''}>\n          To\n        </label>\n        <input\n          type=\"date\"\n          name=\"dateFrom\"\n          value={dateFrom}\n          onChange={onChange}\n        />\n        <input type=\"date\" name=\"dateTo\" value={dateTo} onChange={onChange} />\n      </div>\n      <button type=\"submit\" className=\"btn\">\n        Save\n      </button>\n    </form>\n  );\n};\n\nexport default EducationForm;\n","import React from 'react';\n\nconst EducationDisplay = (props) => {\n  const { dataSets, onEdit, onDelete } = props;\n\n  return (\n    <ul className=\"display-container\">\n      {dataSets.map((data) => {\n        return (\n          <li key={data.id}>\n            <div className=\"icon-group\">\n              <span onClick={() => onEdit(data)} className=\"icon-btn\">\n                &#x270E;\n              </span>\n              <span onClick={() => onDelete(data.id)} className=\"icon-btn\">\n                &#10006;\n              </span>\n            </div>\n            <p>School Name: {data.schoolName}</p>\n            <p>Study: {data.titleOfStudy}</p>\n            <p>\n              Date: {data.dateFrom} to {data.dateTo}\n            </p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default EducationDisplay;\n","import React, { Component } from 'react';\nimport EducationForm from './EducationForm.js';\nimport EducationDisplay from './EducationDisplay.js';\nimport uid from '../utils/uid.js';\n\nclass EducationSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataSets: [],\n      data: {\n        id: uid(),\n        schoolName: '',\n        titleOfStudy: '',\n        dateFrom: '',\n        dateTo: '',\n      },\n      isShowingEmpty: false,\n    };\n  }\n\n  isFormValid = () => {\n    const { schoolName, titleOfStudy, dateFrom, dateTo } = this.state.data;\n    const values = [schoolName, titleOfStudy, dateFrom, dateTo];\n\n    for (const value of values) {\n      if (value.length <= 0) return false;\n    }\n\n    return true;\n  };\n\n  handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({\n      data: {\n        ...this.state.data,\n        [name]: value,\n      },\n      isShowingEmpty: false,\n    });\n  };\n\n  handleEdit = (editData) => {\n    this.setState({\n      dataSets: this.state.dataSets.filter((data) => {\n        return data !== editData;\n      }),\n      data: editData,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.isFormValid()) {\n      this.setState({\n        dataSets: this.state.dataSets.concat(this.state.data),\n        data: {\n          id: uid(),\n          schoolName: '',\n          titleOfStudy: '',\n          dateFrom: '',\n          dateTo: '',\n        },\n        isShowingEmpty: false,\n      });\n    } else {\n      this.setState({\n        isShowingEmpty: true,\n      });\n    }\n  };\n\n  handleDelete = (key) => {\n    this.setState({\n      dataSets: this.state.dataSets.filter((data) => {\n        return data.id !== key;\n      }),\n    });\n  };\n\n  render() {\n    const data = this.state.data;\n    return (\n      <div>\n        <h2 className=\"text-center\">Education Information</h2>\n        <EducationDisplay\n          dataSets={this.state.dataSets}\n          onEdit={this.handleEdit}\n          onDelete={this.handleDelete}\n        />\n        <EducationForm\n          schoolName={data.schoolName}\n          titleOfStudy={data.titleOfStudy}\n          dateFrom={data.dateFrom}\n          dateTo={data.dateTo}\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n          showEmpty={this.state.isShowingEmpty}\n        />\n      </div>\n    );\n  }\n}\n\nexport default EducationSection;\n"],"sourceRoot":""}
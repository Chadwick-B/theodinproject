{"version":3,"sources":["utils/uid.js","components/PracticalForm.js","components/PracticalDisplay.js","components/PracticalSection.js"],"names":["uid","length","parseInt","Math","ceil","random","Date","now","toPrecision","toString","replace","PracticalForm","props","companyName","positionTitle","jobTasks","dateFrom","dateTo","onChange","onSubmit","showEmpty","className","htmlFor","type","name","value","autoComplete","rows","cols","PracticalDisplay","dataSets","onEdit","onDelete","map","data","onClick","id","PracticalSection","isFormValid","state","handleChange","e","target","setState","isShowingEmpty","handleEdit","editData","filter","handleSubmit","preventDefault","concat","handleDelete","key","this","Component"],"mappings":"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","file":"static/js/4.9b889e9e.chunk.js","sourcesContent":["const uid = (length = 16) => {\n  return parseInt(\n    Math.ceil(Math.random() * Date.now())\n      .toPrecision(length)\n      .toString()\n      .replace('.', '')\n  );\n};\n\nexport default uid;\n","import React from 'react';\n\nconst PracticalForm = (props) => {\n  const {\n    companyName,\n    positionTitle,\n    jobTasks,\n    dateFrom,\n    dateTo,\n    onChange,\n    onSubmit,\n    showEmpty,\n  } = props;\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      className={`flex column form-container ${\n        showEmpty ? 'display-empty' : ''\n      }`}\n    >\n      <label\n        htmlFor=\"companyName\"\n        className={companyName.length <= 0 ? 'empty' : ''}\n      >\n        Company Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"companyName\"\n        value={companyName}\n        onChange={onChange}\n        autoComplete=\"off\"\n      />\n      <label\n        htmlFor=\"positionTitle\"\n        className={positionTitle.length <= 0 ? 'empty' : ''}\n      >\n        Title of Position\n      </label>\n      <input\n        type=\"text\"\n        name=\"positionTitle\"\n        value={positionTitle}\n        onChange={onChange}\n        autoComplete=\"off\"\n      />\n      <label htmlFor=\"jobTasks\" className={jobTasks.length <= 0 ? 'empty' : ''}>\n        Main Tasks of Job\n      </label>\n      <textarea\n        name=\"jobTasks\"\n        onChange={onChange}\n        autoComplete=\"off\"\n        rows=\"6\"\n        cols=\"50\"\n      >\n        {jobTasks}\n      </textarea>\n      <div className=\"date-field\">\n        <label\n          htmlFor=\"dateFrom\"\n          className={dateFrom.length <= 0 ? 'empty' : ''}\n        >\n          Date From\n        </label>\n        <label htmlFor=\"dateTo\" className={dateTo.length <= 0 ? 'empty' : ''}>\n          To\n        </label>\n        <input\n          type=\"date\"\n          name=\"dateFrom\"\n          value={dateFrom}\n          onChange={onChange}\n        />\n        <input type=\"date\" name=\"dateTo\" value={dateTo} onChange={onChange} />\n      </div>\n      <button type=\"submit\" className=\"btn\">\n        Save\n      </button>\n    </form>\n  );\n};\n\nexport default PracticalForm;\n","import React from 'react';\n\nconst PracticalDisplay = (props) => {\n  const { dataSets, onEdit, onDelete } = props;\n\n  return (\n    <ul className=\"display-container\">\n      {dataSets.map((data) => {\n        return (\n          <li key={data.id}>\n            <div className=\"icon-group\">\n              <span onClick={() => onEdit(data)} className=\"icon-btn\">\n                &#x270E;\n              </span>\n              <span onClick={() => onDelete(data.id)} className=\"icon-btn\">\n                &#10006;\n              </span>\n            </div>\n            <p>Company Name: {data.companyName}</p>\n            <p>Position Title: {data.positionTitle}</p>\n            <p>Job Tasks: {data.jobTasks}</p>\n            <p>\n              Date: {data.dateFrom} to {data.dateTo}\n            </p>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default PracticalDisplay;\n","import React, { Component } from 'react';\nimport PracticalForm from './PracticalForm.js';\nimport PracticalDisplay from './PracticalDisplay.js';\nimport uid from '../utils/uid.js';\n\nclass PracticalSection extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dataSets: [],\n      data: {\n        id: uid(),\n        companyName: '',\n        positionTitle: '',\n        jobTasks: '',\n        dateFrom: '',\n        dateTo: '',\n      },\n      isShowingEmpty: false,\n    };\n  }\n\n  isFormValid = () => {\n    const { companyName, positionTitle, jobTasks, dateFrom, dateTo } =\n      this.state.data;\n    const values = [companyName, positionTitle, jobTasks, dateFrom, dateTo];\n\n    for (const value of values) {\n      if (value.length <= 0) return false;\n    }\n\n    return true;\n  };\n\n  handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n\n    this.setState({\n      data: {\n        ...this.state.data,\n        [name]: value,\n      },\n      isShowingEmpty: false,\n    });\n  };\n\n  handleEdit = (editData) => {\n    this.setState({\n      dataSets: this.state.dataSets.filter((data) => {\n        return data !== editData;\n      }),\n      data: editData,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (this.isFormValid()) {\n      this.setState({\n        dataSets: this.state.dataSets.concat(this.state.data),\n        data: {\n          id: uid(),\n          companyName: '',\n          positionTitle: '',\n          jobTasks: '',\n          dateFrom: '',\n          dateTo: '',\n        },\n        isShowingEmpty: false,\n      });\n    } else {\n      this.setState({\n        isShowingEmpty: true,\n      });\n    }\n  };\n\n  handleDelete = (key) => {\n    this.setState({\n      dataSets: this.state.dataSets.filter((data) => {\n        return data.id !== key;\n      }),\n    });\n  };\n\n  render() {\n    const data = this.state.data;\n    return (\n      <div>\n        <h2 className=\"text-center\">Practical Information</h2>\n        <PracticalDisplay\n          dataSets={this.state.dataSets}\n          onEdit={this.handleEdit}\n          onDelete={this.handleDelete}\n        />\n        <PracticalForm\n          companyName={data.companyName}\n          positionTitle={data.positionTitle}\n          jobTasks={data.jobTasks}\n          dateFrom={data.dateFrom}\n          dateTo={data.dateTo}\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n          showEmpty={this.state.isShowingEmpty}\n        />\n      </div>\n    );\n  }\n}\n\nexport default PracticalSection;\n"],"sourceRoot":""}